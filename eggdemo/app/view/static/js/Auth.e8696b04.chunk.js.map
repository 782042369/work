{"version":3,"sources":["tool/getUrlParam.js","api/access.js","views/auth/index.jsx"],"names":["getUrlParam","name","window","location","search","reg","RegExp","r","substr","match","strValue","unescape","__webpack_require__","d","__webpack_exports__","accesslist","addaccess","editaccess","deleteaccess","findaccesslist","_tool_request__WEBPACK_IMPORTED_MODULE_0__","data","request","url","method","CheckboxGroup","antd_lib_checkbox__WEBPACK_IMPORTED_MODULE_12___default","a","Group","WrappedNormalLoginForm","props","_this","Object","_Users_yanghongxuan_job_yang_h5_admin_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__","this","_Users_yanghongxuan_job_yang_h5_admin_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_8__","_Users_yanghongxuan_job_yang_h5_admin_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_9__","call","onChange","index","List","_this$state","state","checkAll","checkedList","indeterminate","options","boxList","length","setState","handleSubmit","e","preventDefault","form","validateFields","err","values","access_node","plainOptions","forEach","res","push","key","_id","auth","role_id","then","console","log","antd_lib_message__WEBPACK_IMPORTED_MODULE_5___default","success","message","catch","_this$state2","target","checked","map","ele","value","_this2","status","Checkboxarr","error","_this3","getlist","authlist","_this3$state","mergefieldtojson","element","val","parent_id","arr","items","access_id","title","label","module_name","Array","from","_this4","getFieldDecorator","react__WEBPACK_IMPORTED_MODULE_13___default","createElement","antd_lib_form__WEBPACK_IMPORTED_MODULE_3___default","Item","concat","valuePropName","initialValue","className","style","borderBottom","borderTop","padding","onCheckAllChange","bind","onSubmit","Checkboxinit","antd_lib_button__WEBPACK_IMPORTED_MODULE_1___default","type","htmlType","Component","addauth","create"],"mappings":"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","file":"static/js/Auth.e8696b04.chunk.js","sourcesContent":["/*\n * @Author: 杨宏旋\n * @LastEditors: 杨宏旋\n * @Description: url参数\n * @Date: 2019-05-06 17:53:48\n * @LastEditTime: 2019-05-07 09:54:57\n */\n/**\n * \n * @param {*} name 获取url参数名\n */\nconst getUrlParam = (name) => {\n  if (window.location.search) {\n    var reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\");\n    var r = window.location.search.substr(1).match(reg);\n    var strValue = \"\";\n    if (r != null) {\n      strValue = unescape(r[2]);\n    }\n    return strValue;\n  } else {\n    return false;\n  }\n}\nexport default getUrlParam;\n","/*\n * @Author: 杨宏旋\n * @LastEditors: 杨宏旋\n * @Description: access\n * @Date: 2019-05-05 17:09:31\n * @LastEditTime: 2019-05-08 13:43:42\n */\n\nimport request from '../tool/request'\n\nexport function accesslist(data) {\n  // 列表\n  return request({\n    url: 'admin/Accesslist',\n    method: 'post',\n    data\n  })\n}\nexport function addaccess(data) {\n  // 增加\n  return request({\n    url: 'admin/AddAccess',\n    method: 'post',\n    data\n  })\n}\nexport function editaccess(data) {\n  // 修改\n  return request({\n    url: 'admin/EditAccess',\n    method: 'put',\n    data\n  })\n}\nexport function deleteaccess(data) {\n  // 删除\n  return request({\n    url: 'admin/DeleteAccess',\n    method: 'delete',\n    data\n  })\n}\nexport function findaccesslist(data) {\n  // 删除\n  return request({\n    url: 'admin/FindAccessList',\n    method: 'get',\n    data\n  })\n}\n","/*\n * @Author: 杨宏旋\n * @LastEditors: 杨宏旋\n * @Description: 权限\n * @Date: 2019-05-05 15:48:17\n * @LastEditTime: 2019-05-15 11:55:03\n */\nimport React, { Component } from 'react'\nimport { Checkbox, message, Form, Button } from 'antd'\nimport { findaccesslist } from '../../api/access'\nimport { auth, authlist } from '../../api/role'\nimport getUrlParam from '../../tool/getUrlParam'\nimport mergefieldtojson from '../../tool/mergefieldtojson'\nconst CheckboxGroup = Checkbox.Group\n\nclass WrappedNormalLoginForm extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tcheckedList: [], // 选中box\n\t\t\tboxList: [], // 后台获取到到数据 分离出来到 checkbox\n\t\t\tindeterminate: [], // 全选样式控制\n\t\t\tcheckAll: [], // 是否全选\n\t\t\tplainOptions: [] // 后台获取到到数据\n\t\t}\n\t}\n\t/**\n * \n * @param {*} index 下标\n * @param {*} List 选中数组\n */\n\tonChange = (index, List) => {\n\t\tlet { checkAll, checkedList, indeterminate, boxList } = this.state\n\t\tlet options = boxList[index]\n\t\tcheckedList[index] = List\n\t\tindeterminate[index] = !!checkedList[index].length && checkedList[index].length < options.length\n\t\tcheckAll[index] = checkedList[index].length === options.length\n\t\tthis.setState({\n\t\t\tcheckedList,\n\t\t\tindeterminate,\n\t\t\tcheckAll\n\t\t})\n\t}\n\t/**\n * \n * @param {*} index 下标\n * @param {*} e 原始参数\n */\n\tonCheckAllChange(index, e) {\n\t\tlet { checkAll, checkedList, indeterminate, boxList } = this.state\n\t\tcheckedList[index] = e.target.checked ? boxList[index].map((ele) => ele.value) : [] // 过滤全选 只需要 value\n\t\tindeterminate[index] = false // 全选状态\n\t\tcheckAll[index] = e.target.checked // 全选 yes or no\n\t\tthis.setState({\n\t\t\tcheckedList,\n\t\t\tindeterminate,\n\t\t\tcheckAll\n\t\t})\n\t}\n\n\tgetlist() {\n\t\tfindaccesslist()\n\t\t\t.then((res) => {\n\t\t\t\tif (res.status === 1) {\n\t\t\t\t\tthis.Checkboxarr(res)\n\t\t\t\t} else {\n\t\t\t\t\tmessage.error(res)\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log('err: ', err)\n\t\t\t\tmessage.error(err)\n\t\t\t})\n\t}\n\t/**\n   * 提交\n   */\n\thandleSubmit = (e) => {\n\t\te.preventDefault()\n\t\tthis.props.form.validateFields((err, values) => {\n\t\t\tif (!err) {\n\t\t\t\tlet { checkedList } = this.state\n\t\t\t\tlet access_node = []\n\t\t\t\tthis.state.plainOptions.forEach((res, index) => {\n\t\t\t\t\tif (checkedList[index].length > 0) {\n\t\t\t\t\t\taccess_node.push({\n\t\t\t\t\t\t\tkey: res._id,\n\t\t\t\t\t\t\tcheckedList: checkedList[index]\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tauth({\n\t\t\t\t\trole_id: getUrlParam('id'),\n\t\t\t\t\taccess_node: access_node\n\t\t\t\t})\n\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\tconsole.log('res: ', res)\n\t\t\t\t\t\tmessage.success(res.message)\n\t\t\t\t\t})\n\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\tconsole.log('err: ', err)\n\t\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n\t/**\n   * \n   * @param {*} res 接口获取到数据 生成需要到数组\n   */\n\tcomponentWillMount() {\n\t\tthis.getlist()\n\t\tauthlist({\n\t\t\trole_id: getUrlParam('id')\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tif (res.data.length > 0) {\n\t\t\t\t\tlet { checkAll, checkedList, indeterminate, boxList } = this.state\n\t\t\t\t\tmergefieldtojson(res.data, 'pid', 'parent_id').forEach((element) => {\n\t\t\t\t\t\tthis.state.plainOptions.forEach((val, index) => {\n\t\t\t\t\t\t\tif (val._id === element.parent_id) {\n\t\t\t\t\t\t\t\tlet arr = []\n\t\t\t\t\t\t\t\telement.items.map((res) => arr.push(res.access_id))\n\t\t\t\t\t\t\t\tcheckedList[index] = arr\n\t\t\t\t\t\t\t\tcheckAll[index] = checkedList[index].length === boxList[index].length\n\t\t\t\t\t\t\t\tindeterminate[index] =\n\t\t\t\t\t\t\t\t\t!!checkedList[index].length && checkedList[index].length < boxList[index].length\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\ttitle: '修改',\n\t\t\t\t\t\tcheckedList,\n\t\t\t\t\t\tindeterminate,\n\t\t\t\t\t\tcheckAll\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\ttitle: '增加'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log('err: ', err)\n\t\t\t})\n\t}\n\tCheckboxarr(res) {\n\t\tlet boxList = []\n\t\tres.data.forEach((element, index) => {\n\t\t\tboxList[index] = []\n\t\t\telement.items.forEach((ele) => {\n\t\t\t\tboxList[index].push({\n\t\t\t\t\tlabel: ele.module_name,\n\t\t\t\t\tvalue: ele._id\n\t\t\t\t})\n\t\t\t})\n\t\t})\n\t\tlet indeterminate = Array.from({ length: res.data.length }, () => false)\n\t\tlet checkedList = Array.from({ length: res.data.length }, () => [])\n\t\tlet checkAll = Array.from({ length: res.data.length }, () => false)\n\t\tif (res.status === 1) {\n\t\t\tthis.setState({\n\t\t\t\tplainOptions: res.data,\n\t\t\t\tcheckedList,\n\t\t\t\tindeterminate,\n\t\t\t\tcheckAll,\n\t\t\t\tboxList\n\t\t\t})\n\t\t}\n\t}\n\tCheckboxinit() {\n\t\tconst { getFieldDecorator } = this.props.form\n\t\treturn this.state.plainOptions.map((res, index) => (\n\t\t\t<Form.Item key={res._id}>\n\t\t\t\t{getFieldDecorator(`${index + res._id}`, {\n\t\t\t\t\tvaluePropName: 'checked',\n\t\t\t\t\tinitialValue: []\n\t\t\t\t})(\n\t\t\t\t\t<div className=\"checkbox\">\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tborderBottom: '1px solid #E9E9E9',\n\t\t\t\t\t\t\t\tborderTop: '1px solid #E9E9E9',\n\t\t\t\t\t\t\t\tpadding: '10px 0'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\tindeterminate={this.state.indeterminate[index]}\n\t\t\t\t\t\t\t\tonChange={this.onCheckAllChange.bind(this, index)}\n\t\t\t\t\t\t\t\tchecked={this.state.checkAll[index]}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{res.module_name}\n\t\t\t\t\t\t\t</Checkbox>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<CheckboxGroup\n\t\t\t\t\t\t\toptions={this.state.boxList[index]}\n\t\t\t\t\t\t\tvalue={this.state.checkedList[index]}\n\t\t\t\t\t\t\tonChange={this.onChange.bind(this, index)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Form.Item>\n\t\t))\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<Form onSubmit={this.handleSubmit} className=\"login-form\">\n\t\t\t\t<h1>{this.state.title}角色</h1>\n\t\t\t\t{this.Checkboxinit()}\n\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n\t\t\t\t\t提交\n\t\t\t\t</Button>\n\t\t\t</Form>\n\t\t)\n\t}\n}\nconst addauth = Form.create()(WrappedNormalLoginForm)\nexport default addauth\n"],"sourceRoot":""}